Format 3.0. Ce format est basé sur la spécification 2.3.
Il en corrige les problèmes suivants :
- les ressources externes doivent obligatoirement être déclarées après le header et avant toute déclarations de noeuds, liens ou annotations
- l'orientation d'un lien est spécifiée au niveau du type de lien
- un fichier peut ne pas définir de type (au cas où il ne serait qu'un fichier qui en rassemble d'autres par exemple)

comma = "," ;
dot   = "." ;
sep   = "|" ;
semi  = ";" ;
bool  = "0" | "1" ;
line_break = "\n" | "\r\n" ;
bool  = "true" | "false" ;

File                        = Header , (File_declaration | line_break)* , (Type_declaration | line_break)* , ( Node_declaration | Edge_declaration | Annotation_declaration | line_break)* ;

Header                      = header_declaration_prefix , sep , format_version ;
header_declaration_prefix   = "H" ;
format_version              = "3.0" ;

File_declaration            = file_declaration_prefix , sep , file_location , sep , file_name ;
file_declaration_prefix     = "F" ;
file_location               = "l" | "r" ;                       % local or remote
file_name                   = string ;                          % chemin de fichier pour un fichier local, URL dans le cas d'un fichier distant

Type_declaration            = node_type_declaration | edge_type_declaration ;
node_type_declaration       = type_declaration_prefix , sep , type_kind , sep , type_internal_id , sep , type_public_id , sep , type_canonical_name, sep, type_description ;
edge_type_declaration       = type_declaration_prefix , sep , type_kind , sep , edge_is_oriented , type_internal_id , sep , type_public_id , sep , type_canonical_name, sep, type_description ;
type_declaration_prefix     = "T" ;
type_kind                   = "v" | "e" ;                       % 'v' comme vertex, 'e' comme edge
type_internal_id            = number ;                          % identifiant numérique interne à ce fichier
type_public_id              = guid ;                            % identifiant numérique (GUID) unique associé au type quelque soit le projet
type_canonical_name         = string ;
type_description            = string ;
edge_is_oriented            = bool ;

Node_declaration            = node_declaration_prefix , sep , node_type , sep , node_internal_id , sep , node_public_id , sep , node_lang , sep , node_canonical_name , sep , node_content ;
node_declaration_prefix     = "N" ;
node_type                   = number ;                          % correspond à un type_internal_id déclaré dans le fichier
node_internal_id            = number ;                          % identifiant numérique interne au fichier
node_public_id              = guid ;
node_lang                   = language_code , [ "." , dialect_code ] ;
language_code               = ISO 639-3 language code ;
dialect_code                = string ;
node_canonical_name         = string ;
node_content                = string ;                          % contenu du noeud sous forme de chaîne de caractères

Edge_declaration            = edge_declaration_prefix , sep , edge_type , sep , edge_public_id , sep , edge_content ;
edge_declaration_prefix     = "E" ;
edge_type                   = number ;                          % correspond à un des id internes d'un types déclarés en en-tête
edge_public_id              = guid
edge_content                = edge_ref , ( comma , edge_ref )+ ;
edge_ref                    = edge_internal_ref | edge_public_ref ;
edge_internal_ref           = "i" , "(" , number , ")" ;        % le nombre doit correspondre à un id interne d'un noeud déclaré dans le fichier
edge_public_ref             = "e" , "(" , guid , ")" ;          % identifiant numérique (GUID) d'un objet du graph

Annotation_declaration      = annotation_declaration_prefix , sep , object_public_id , sep , annotation_namespace , ":", annotation_key ,":",  annotation_value ;
annotation_declaration_prefix = "A" ;
object_public_id            = guid ;                            % id de l'objet du graph auquel est attachée l'annotation
annotation_namespace        = string ;                          % qui ne contient ni ':' ni '|'
annotation_key              = string ;                          % qui ne contient ni ':' ni '|'
annotation_value            = string ;                          % qui ne contient ni ':' ni '|'